-- Графики
CREATE TABLE schedules (
  -- Идентификатор графика
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Код графика в виде "пн,ср 1ч;вт,чт 2ч"
  code               TEXT NOT NULL
);
CREATE UNIQUE INDEX schedules_index ON schedules (code);

-- Дни графиков
CREATE TABLE schedule_days (
  -- Идертификатор дня недели графика
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Идентификатор графика
  scheduleId         INT NOT NULL REFERENCES schedules (id),
  -- Номер дня начинается с нуля
  dayNumber          INT NOT NULL,
  -- Норма часов
  hoursNorm          REAL NOT NULL
);
CREATE UNIQUE INDEX schedule_days_index ON schedule_days (scheduleId, dayNumber);

-- Группы
CREATE TABLE "groups" (
  -- Идентификатор группы
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Наименование группы
  name               TEXT NOT NULL,
  -- Идентификатор графика
  scheduleId         INT NOT NULL REFERENCES schedules (id)
);
CREATE UNIQUE INDEX groups_index ON "groups" (name, scheduleId);

-- Персоны
CREATE TABLE persons (
  -- Идентификатор персоны
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Фамилия
  family             TEXT NOT NULL,
  -- Имя
  name               TEXT NOT NULL,
  -- Отчество
  middleName         TEXT,
  -- Дата рождения
  birthday           DATE
);
CREATE UNIQUE INDEX persons_index ON persons (family, name, middleName, birthday);

-- Связи персон с группами
CREATE TABLE person_group_links (
  -- Идентификатор связи персоны с группой
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Идентификатор персоны
  personId           INT NOT NULL REFERENCES persons (id),
  -- Идентификатор группы
  groupId            INT NOT NULL REFERENCES "groups" (id)
);
CREATE UNIQUE INDEX person_group_links_index ON person_group_links (personId, groupId);

-- Посещаемость персон в группах
CREATE TABLE timesheets (
  -- Идентификатор посещаемости
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Идентификатор связи персоны с группой
  personGroupLinkId  INT NOT NULL REFERENCES person_group_links (id),
  -- Дата посещения
  attendanceDate      DATE NOT NULL,
  -- Количество часов
  hoursNumber        REAL NOT NULL
);
CREATE UNIQUE INDEX timesheets_index ON timesheets (personGroupLinkId, attendanceDate);

-- Настройки
CREATE TABLE settings (
  -- Идентификатор настройки
  id                 INT NOT NULL PRIMARY KEY AUTOINCREMENT,
  -- Наименование настройки
  name               TEXT NOT NULL,
  -- Текстовое значение
  textValue          TEXT,
  -- Целочисленное значение
  intValue           INT,
  -- Значение даты
  dateValue          DATE
);
CREATE UNIQUE INDEX settings_index ON settings (name);

-- Дни графика
_daysInSchedule:
SELECT *
  FROM schedule_days
 WHERE scheduleId = :scheduleId;

-- Список групп с графиками и количеством персон
_groupsExtras:
SELECT G.id,
       G.name,
       G.scheduleId,
       S.code AS scheduleCode,
       COUNT(*) AS personsAmount
  FROM "groups" G
 INNER JOIN schedules S ON S.id = G.scheduleId
 INNER JOIN person_group_links L ON L.groupId = G.id
 GROUP BY
       G.id,
       G.name,
       G.scheduleId,
       S.code;

-- Список персон в группе
_personsInGroup:
SELECT L.id AS personGroupLinkId,
       L.personId,
       P.family,
       P.name,
       P.middleName,
       P.birthday
  FROM person_group_links L
 INNER JOIN persons P ON P.id = L.personId
 WHERE L.groupId = :groupId
 ORDER BY
       P.family,
       P.name,
       P.middleName;

-- Посещаемость персоны в группе за период
_timesheetsOfPersonInGroupForPeriod:
SELECT *
  FROM timesheets
 WHERE personGroupLinkId = :personGroupLinkId
   AND attendanceDate BETWEEN date(:period, 'start of month') AND :period;

-- Активная группа
_activeGroup:
SELECT G.*
  FROM settings S
 INNER JOIN "groups" G ON G.id = S.intValue
 WHERE S.name = 'activeGroup';

-- Установка активной группы
_setActiveGroup:
UPDATE settings SET intValue = :groupId WHERE name = 'activeGroup';
